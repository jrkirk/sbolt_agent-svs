### using templates in semantic memory, map verbs to operators 

### results in a mapped operator 
sp {propose*map*verb
   (state <s> ^interaction.stack.segment <top>)
   (<top>    	  ^purpose <p>)
   (<p> ^type external-action
   	^satisfaction <ps>
	-^indexed-operator <map-op>)  
   (<ps> ^action-event.type <info>)
   (<info> -^verb.word describe) #JK for describe the scene-shouldn't be handled as a verb
-->
   (<s> ^operator <op> +)
   (<op> ^name index-verb
   	 ^information <info>
	 ^category indexing)
}

sp {elaborate*indexed-operator
   (state <s> ^interaction.stack.segment.purpose <p>)
   (<p> ^indexed-operator <map-op>
   	-^type goal-acquisition)
-->
   (<s> ^indexed-operator <map-op>)
}

#### resolve verb arguments to objects in current perception (or from semantic memory)
### prefer the mapped operator
sp {elaborate*attribute*match
   (state <s> ^indexed-operator <map-op> <> <op>
   	      ^operator <op> +)
   (<op> ^<attr> <val>
   	 ^category << primitive-action composite-action >> )
   (<map-op> ^<attr> <val>)
-->
   (<op> ^matched <attr>)
}

#### operator match is not complete untill all arguments are matched
sp {elaborate*operator*match
   (state <s> ^operator <op> + 
   	      ^indexed-operator <map-op> <> <op>)
   (<map-op> ^{<attr> <> applied <> information <> _relation <> _metadata} <val>)
   (<op> -^matched <attr>
   	 ^category << primitive-action composite-action >>)
-->
   (<op> ^op-matched no)
   (<s> ^operator <op> -)
}

### if there exists an operator for which all attributes match, give it a better preference than other operators

sp {prefer*match
   (state <s> ^indexed-operator <map-op> <> <op>
   	      ^operator <op> +
	      ^interaction.stack.segment.purpose.satisfaction.action-event.type <info>
	      ^topstate <s>)
   (<op> -^op-matched no
   	 ^category << primitive-action composite-action >>)
   (<map-op> -^applied true)
   -->
   (<s> ^operator <op> >)
   (<op> ^information <info>
   	 ^indexed-operator <map-op>)
}


sp {propose*indexed-operator*if*no-choices
   (state <s> ^superstate <ss>
   	      ^impasse no-change
	      ^attribute state)
   (<ss> ^indexed-operator <map-op>
   	 ^topstate <ss>
	 ^interaction.stack.segment.purpose.satisfaction.action-event.type <info>)
 -->
   (<ss> ^operator <map-op> +)
   (<map-op> ^category composite-action
   	     ^information <info>
	     ^indexed-operator <map-op>)
}

### augment spatial-relationship to the primitive operator
sp {augment*spatial-relationship
   (state <s> ^indexed-operator <iop>
   	      ^operator <op>)
   (<iop> ^_relation._ltid <rel>)
   (<op> ^category primitive-action)
-->
   (<op> ^spatial-relationship <rel>)
}

### set indexed-operator as applied
sp {mark*indexed-operator*applied
   (state <s> ^indexed-operator <map-op>
   	      ^operator <op>
	      ^topstate <s>)
   (<op> ^indexed-operator <map-op>
   	 ^information <info>)
-->
   (<map-op> ^applied true
   	     ^information <info>)
}

### delete indexed-operator
sp {propose*delete-indexed-operator
   (state <s> ^superstate <ss>
   	      ^impasse no-change
	      ^attribute state)
   (<ss> ^indexed-operator <map-op>)
   (<map-op> ^applied true)
-->
   (<ss> ^operator <op> + >)
   (<op> ^name delete-indexed-operator
   	 ^indexed-operator <map-op>)
}

sp {apply*delete-indexed-operator
   (state <s> ^operator <op>
   	      ^indexed-operator <map-op>)
   (<op> ^name delete-indexed-operator
   	 ^indexed-operator <map-op>)
-->
   (<s> ^indexed-operator <map-op> -)
}
     
   
#### plug in to the interaction stack
sp {write*primitive-action*status*topstate
   (state <s> ^operator <op>
   	      ^topstate.status <status>)
   (<op> ^name delete-indexed-operator
   	 ^indexed-operator <map-op>)
   (<map-op> ^information <info>
   	     ^applied true)
 -->
   (<map-op> ^applied true -)
   (<status> ^performed.action-event <e>)
   (<e> ^type <info>)
}
