###  initialize structures in semantic memory for indexing

### semantic memory will store the following
### 1. lexical knowledge about verbs/objects
### 2. mapping of lexical knowledge about verbs to procedural knowledge about actions


### add known actions to semantic memory

smem --add {
### put down a red block.
     (<a1> ^linguistic <al1> ^procedural <ap1> ^type action)
     (<al1> ^verb put ^direct-object <obj>) 
     (<ap1> ^op_name op_put-down ^argument <obj>)
## put the red block in the pantry.
     (<a2> ^linguistic <al2> ^procedural <ap2> ^type action)
     (<al2> ^verb put ^direct-object <obj2> ^to <loc2>) 
     (<ap2> ^op_name op_put-down-object-location ^argument1 <obj2> ^argument2 <loc2>)
## put the red block to the right of/left of the yellow cylinder.
      (<a5> ^linguistic <al5> ^procedural <ap5> ^type action)
     (<al5> ^verb put ^direct-object <obj5> ^right-of <loc5> ^left-of <loc5> ^above <loc5> ^below <loc5> ^behind <loc5> ^in-front-of <loc5>) 
     (<ap5> ^op_name op_put-down-object-object ^argument1 <obj5> ^argument2 <loc5> ^spatial-relationship <loc5>)
## point to the yellow block.
     (<a3> ^linguistic <al3> ^procedural <ap3> ^type action)
     (<al3> ^verb point ^to <object>) 
     (<ap3> ^op_name op_point-to-object ^argument1 <object>)
## pick up the yellow block.
     (<a4> ^linguistic <al4> ^procedural <ap4> ^type action)
     (<al4> ^verb pick ^direct-object <obj4>) 
     (<ap4> ^op_name op_pick-up-object ^argument1 <obj4>)
}

