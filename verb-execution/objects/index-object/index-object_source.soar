# Usage of index-object:

# Indexing a single object
# 	(<s> ^operator <o>)
# 	(<o> ^name index-object
#	   	 ^object <obj>jjjnnmmjjkkhh
#	     ^<parameter> <value>)
# 	(<obj> ^word <word1>
#		   ^word <word2>)
   
# Example: Find all the large red objects, dont' ask the user for clarification
#	(<s> ^operator <o>)
#	(<o> ^name index-object
#     	 ^return-all true
#     	 ^object <obj>)
#	(<obj> ^word large
#          ^word red)
  
	
#	# Indexing an object using a relation
#	(<s> ^operator <o>)
#	(<o> ^name index-object
#	     ^object <obj1>
#	     ^object <obj2>
#	     ^relation <rel>)
#	(<obj1> ^word <word1a> <word1b> ...)
#	(<obj2> ^word <word2a> <word2b> ...)
#	(<rel> ^object1 <obj1> ^object2 <obj2> ^word <prep>)
#	
#	# Example: Find the red square that is right of the pantry, if there are multiple matches ask for clarification
#	(<s> ^operator <o>)
#	(<o> ^name index-object
#		 ^use-interaction true
#		 ^allow-ties true
#	     ^object <obj1>
#	     ^object <obj2>
#	     ^relation <rel>)
#	(<obj1> ^word red ^word square)
#	(<obj2> ^word pantry)
#	(<rel> ^object1 <obj1> ^object <obj2> ^word right-of)
   
# Parameters:
#   ^use-interaction << true false >> 
#			If true, then if the agent needs to resolve uncertaintly it will initiate interaction with the user
#			If false, then if the agent can't resolve the uncertainty it will return failure
#			[Default = false]
#	^allow-ties << true false >>
#			If true, then if there are multiple matches then an operator-tie will occur and the agent will ask a which-question
#			If false, then a match will randomly be selected and returned
#			[Default = false]
#	^return-all << true false >>
#			If true, then all possible matches will be returned
#   		[Default = false]


source init-index-object.soar
# init-index-object
# This operator sets up the index-object substate including:
#	Restoring an existing index-object-context or creating a new one

source lookup-category.soar
# For each object.property, look up the category for the word
# Copies the category result onto the object and the label-query

source lookup-label.soar
# For each category/word pair, look up the internal label for that concept
# Copies the result to the object and causes the label-query to be removed

pushd identify-object
source identify-object_source.soar
popd
# Once all the labels are found for an object, identify-object is used to
# find matches from the visual system for that description and return them all
# If no matches are found it returns ^match failure
# The result is to create an object-matches structure on the state
#	^object-matches <om>
#		^object <obj>   <- object on the context used for the query
#		^match          <- object on the topstate which is retrieved (or failure)

source teaching-request.soar
# teaching-request
# 	If use-interaction=true and no matches were found for the object, 
#   ask the user for more information
# The teaching interaction is finished with the single word 'cancel' or 'finished'


source find-relations.soar

source complete-index-object.soar
# complete-index-object 
# 	This operator returns the result of the index-object onto the superstate operator
# index-object-failure
#   This operator returns ^match failure as the result onto the superstate operator

source op-tie*complete-index-object.soar
# op-tie*complete-index-object
#   If allow-ties=true, then if there are multiple matches then the complete-index-object operators will tie
#	Then in the substate a query asking 'which' will be asked

source object-message.soar
# After the user has asked a which-question, these rules handle possible responses from the user
#   object-message with 'this' specifier: you can just use the pointed-to object as the candidate 
#   object-message with DEF specifier: add words to the object's description


source elaborations.soar
# elaborations.soar
# Elaborations used to construct the index-object substate including:
#   Creating a label-query for each object.property
# 	Copying parameter values (or creating default values if missing)
#	Modifying the final-matches structure with the result of the index-object

source preferences.soar
# preferences
# Ensure the following operator ordering:
#   index-object-failure > all others
#   identify-object > teaching-request
#   all others > complete-index-object