sp {identify-object*elaborate*match-info
   (state <s> ^name identify-object)
-->
   (<s> ^match-info <i>)
}

sp {identify-object*elaborate*potential-match
   (state <s> ^name identify-object
              ^topstate.object <obj>
             -^object-matches.match <obj>
              ^match-info <info>)
-->
   (<info> ^potential-match <obj>)
}

# Partial match if at least one label matches
sp {identify-object*elaborate*partial-match
   (state <s> ^name identify-object
              ^match-info <info>
              ^object-matches.object.property <desc-prop>)
   (<info> ^potential-match <obj>
          -^not-match <obj>)
   (<obj> ^property <obj-prop>)
   (<obj-prop> ^name <cat-name>
           		^type visual
           		^label <label>)
   (<desc-prop> ^category <cat-name>
         		^label <label>)
-->
   (<info> ^partial-match <obj>)
}

# If the object has not been marked as a poor-match or not-match then it is a good-match
sp {identify-object*elaborate*good-match
   (state <s> ^name identify-object      
              ^match-info <info>)
   (<info> ^potential-match <obj> 
           -^not-match <obj>
           -^poor-match <obj>)
-->
   (<info> ^good-match <obj>)
}

# Not a match if there are candidate objects and the object is not one of them
sp {identify-object*elaborate*not-match*not-candidate
   (state <s> ^name identify-object
              ^match-info <info>
              ^superstate.operator <ss-op>)
   (<info> ^potential-match <obj>) 
   (<obj> ^id <id>)  
   (<ss-op> ^object.candidate-id <cid>
           -^object.candidate-id <id>)       
-->
   (<info> ^not-match <obj>)
}

# Not matched if the object doesn't have the given category
sp {identify-object*elaborate*not-match*category
   (state <s> ^name identify-object
              ^match-info <info>
              ^operator <o> +
              ^object-matches.object.property.category <cat-name>)
   (<info> ^potential-match <obj>)   
   (<obj> -^property.name <cat-name>)
-->
   (<info> ^not-match <obj>)
}


# Not matched if the object's visual label doesn't match
sp {identify-object*elaborate*not-match*visual-label
   (state <s> ^name identify-object
              ^match-info <info>
              ^object-matches.object.property <desc-prop>)
   (<info> ^potential-match <obj>)   
   (<obj> ^property <obj-prop>)
   (<obj-prop> ^name <cat-name>
           		^type visual
           		^label <p-label> <> <label>)
   (<desc-prop> ^category <cat-name>
         		^label <label>)
-->
   (<info> ^not-match <obj>)
}

# If there is no label of the given property, then mark it as a poor match
sp {identify-object*reject*not-match*visual-label
   (state <s> ^name identify-object
              ^match-info <info>
              ^object-matches.object.property <desc-prop>)
   (<info> ^potential-match <obj>
           -^not-match <obj>)
   (<obj> ^property <obj-prop>)
   (<obj-prop> ^name <cat-name>
           		^type visual
           		-^label)
   (<desc-prop> ^category <cat-name>
         		^label <label>)
-->
   (<info> ^poor-match <obj>)
}

# If the name doesn't match then mark it as a poor match
sp {identify-object*reject*not-match*name
   (state <s> ^name identify-object
              ^match-info <info>
              ^object-matches.object.property <desc-prop>)
   (<info> ^potential-match <obj>
           -^not-match <obj>)
   (<obj> ^property <obj-prop>)
   (<obj-prop> ^name name
          	  -^word <name>)
   (<desc-prop> ^category name
                ^word {<name> <> object})
-->
   (<info> ^poor-match <obj>)
}


# object-match
# Proposed for every good-match object,
# If not rejected, then it marks that object as a match 

sp {identify-object*propose*object-match
   (state <s> ^name identify-object
              ^match-info.good-match <obj>
              ^object-matches <matches>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name object-match
        ^category indexing
        ^object <obj>)
}

# Mark the object as a match
sp {identify-object*apply*object-match
   (state <s> ^name identify-object
              ^operator <o>
              ^object-matches <m>)
   (<o> ^name object-match
        ^object <obj>)
-->
   (<m> ^match <obj>)
}

# If only one object could work, infer that as the answer
# If there are no good-matches, and there is only one poor-match,
#   Then ask the user for confirmation
sp {identify-object*propose*infer-match*one*poor-match
   (state <s> ^name identify-object
              ^match-info <info>
             -^object-matches.match
              ^superstate.index-object-context.use-interaction true
              ^superstate.index-object-context.infer-match true)
   (<info> -^good-match
            ^poor-match <obj>
           -^poor-match <> <obj>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name infer-match
        ^category indexing
        ^object <obj>)
}

sp {identify-object*propose*infer-match*one*partial-match
   (state <s> ^name identify-object
              ^match-info <info>
             -^object-matches.match
              ^superstate.index-object-context.use-interaction true
              ^superstate.index-object-context.infer-match true)
   (<info> -^good-match
            ^partial-match <obj>
           -^partial-match <> <obj>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name infer-match
        ^category indexing
        ^object <obj>)
}

sp {identify-object*apply*infer-match*point
   (state <s> ^name identify-object
              ^io.output-link <out>
              ^operator <o>)
   (<o> ^name infer-match
        ^object <obj>)
   (<obj> ^id <id>
          ^pose <pose>)
-->
   (<out> ^point <point>)
   (<point> ^id <id>
            ^pose <pose>)
}

sp {identify-object*reject*infer-match*holding
   (state <s> ^name identify-object
              ^operator <o> +
              ^io.input-link.self.grabbed-object <> -1)
   (<o> ^name infer-match)
-->
   (<s> ^operator <o> -)
}

# Creates a teaching-request context 
sp {identify-object*apply*infer-match*create*context
   (state <s> ^name identify-object
              ^object-matches.object <i-obj>
              ^superstate.index-object-context <i-context>
              ^operator <o>)
   (<o> ^name infer-match
        ^object.id <id>)
-->
   (<s> ^context <context>)
   (<context> ^cause request-index-confirmation
              ^index-object-context <i-context>
        		^index-object <i-obj>
        		^object-id <id>
         		^description <desc>)
   (<desc> ^determiner a)
}

# Copies adjectives to the description
sp {identify-object*apply*infer-match*copy*word
   (state <s> ^name identify-object
              ^operator.name infer-match
              ^context <context>)
   (<context> ^description <desc>
              ^index-object.property <prop>)
   (<prop> ^category <> name <> shape
           ^word <word>)
-->
   (<desc> ^adjective <word>)
}

# Copies the name to the description
sp {identify-object*apply*infer-match*copy*name
   (state <s> ^name identify-object
              ^operator.name infer-match
              ^context <context>)
   (<context> ^description <desc>
              ^index-object.property <prop>)
   (<prop> ^category << name shape >>
           ^word <word>)
-->
   (<desc> ^word <word>)
}

# If no names, then copies the word object as the name
sp {identify-object*apply*infer-match*copy*name*object
   (state <s> ^name identify-object
              ^operator.name infer-match
              ^context <context>)
   (<context> ^description <desc>
              ^index-object <i-obj>)
   (<i-obj> -^property.category << name shape >>)
-->
   (<desc> ^word object)
}

sp {identify-object*apply*infer-match*send-message
   (state <s> ^name identify-object
              ^topstate.status <status>
              ^operator.name infer-match
              ^context <context>)
   (<context> ^description <desc>)
   (<desc> ^word <w>)
-->
  (<status> ^type request-index-confirmation
         ^state-name topstate
         ^purpose <p>)
   (<p> ^type request-index-confirmation
        ^context <context>
        ^parameters <params>
        # AM: Changed the satisfaction structure
        ^satisfaction.dialog-event.type single-word-response)
   # Segment parameters - A message to send 
   (<params> ^message <msg>)
   (<msg> ^type request-index-confirmation
          ^originator agent
          ^fields.object <desc>)
}

