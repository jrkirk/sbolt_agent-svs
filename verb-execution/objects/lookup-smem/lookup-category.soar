# Finds a category for a given word (built-in)
# Expected format of the operator
#   (<s> ^operator <o> + =)
#   (<o> ^name lookup-smem
#        ^lookup-type category
#        ^query <q>
#        ^desired.category true)
#   (<q> ^type word2cat ^word <word> ^category c67)
# Only word is specified
#
# Optional paramerter (<o> ^ask-user true) will cause the agent
#   to ask the user if the category of a word is unknown

# The category is cached in working memory, use it
sp {apply*lookup-smem*category*working-mem
   (state <s> ^operator <o>
              ^topstate.mappings.word2cat <w2c>)
   (<o> ^name lookup-smem
        ^lookup-type category
        ^query.word <word>)
   (<w2c> ^<word> <cat>)
-->
   (<o> ^result <cat>)
}

# If this is a new word with an unknown category ask the user
sp {apply*lookup-smem*category*failure*new-interaction
   (state <s> ^operator <o>
              ^topstate.status <status>)
   (<o> ^name lookup-smem
        ^ask-user true
        ^lookup-type category
        ^query.word <word>
        ^result failure)
-->
  (<status> ^type category-of-word
         ^state-name topstate
         ^purpose <p>)
   (<p> ^type category-of-word
        ^context <context>
        ^parameters <params>
        ^satisfaction.dialog-event object-message)
   # Segment context - the word being asked about
   (<context> ^cause category-of-word-query
              ^word <word>)
   # Segment parameters - A message to send 
   (<params> ^message <msg>)
   (<msg> ^type category-of-word
          ^originator agent
          ^fields.word <word>)
}
