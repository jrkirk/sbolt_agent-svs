# Used to find a label given a word's disambiguation (right now word + category)
# Expected Operator:
#   (<s> ^operator <o> +)
#   (<o> ^name lookup-smem
#        ^lookup-type label
#        ^query <q>
#        ^desired.label true)
#   (<q> ^type label-map ^word <word> ^category <cat> ^label l32)
# Both word and category are specified

# The label is cached in working memory, use it
sp {lookup-smem*label*working-mem
   (state <s> ^operator <o>
              ^topstate.mappings.label-map <lm>)
   (<o> ^name lookup-smem
        ^lookup-type label
        ^query.word <word>
        ^query.category <cat>)
   (<lm> ^<word>.<cat> <label>)
-->
   (<o> ^result <label>)
}

# Create the new label
sp {lookup-smem*label*failure*create*new-label
   (state <s> ^operator <o>)
   (<o> ^name lookup-smem
        ^lookup-type label
        ^query.word <word>
        ^query.category <cat>
        ^result failure)
-->
   (<o> ^new-label (concat <cat> |-| <word>))
}

# Adds the new-label as a result to the operator
sp {apply*lookup-smem*label*new-label*add*result
   (state <s> ^operator <o>)
   (<o> ^name lookup-smem
        ^lookup-type label
        ^new-label <label>
        ^result failure)
-->
   (<o> ^result <label>)
}

# Stores the new label in semantic memory
sp {apply*lookup-smem*label*new-label*store*smem
   (state <s> ^operator <o>
              ^smem.command <smem-cmd>)
   (<o> ^name lookup-smem
        ^lookup-type label
        ^query.word <word>
        ^query.category <cat>
        ^new-label <label>)
-->
   (<smem-cmd> ^store <l>)
   (<l> ^type label-map ^word <word> ^category <cat> ^label <label>)
}

# Updates any objects with the word, for convenience
sp {apply*lookup-smem*label*annotate*object
   (state <s> ^topstate.object.property <prop>
              ^operator <o>)
   (<o> ^name lookup-smem
        ^lookup-type label
        ^query.category <cat>
        ^query.word <word>
        ^result {<label> <> failure})
   (<prop> ^name <prop-name>
           ^value <val>)
   (<val> ^label <label>
         -^word <word>)
-->
   (<val> ^word <word>)
}
