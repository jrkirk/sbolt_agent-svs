
sp {find-value-group*propose*differs-from-group
   (state <s> ^name find-value-group
              ^att-to-comp <att>
              ^att-type <att-type>
              ^value <val>
              ^superstate.object <obj>
             -^compared <obj>)
   (<obj> ^mapping.att-val-pair <av-pair>)
   (<av-pair> ^att.<att-type> <att>
              ^val.<att-type> <> <val>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name differs-from-group
        ^category object-processing
        ^object <obj>)
}

# If the attribute is internal, then create a query structure
sp {find-value-group*elaborate*differs-from-group*query
   (state <s> ^name find-value-group
              ^att-type internal
              ^operator <o> +
              ^att-to-comp <att-to-comp>)
   (<o> ^name differs-from-group
        ^object <obj>)
-->
   (<o> ^query <q>)
   (<q> ^type differs-from-group
        ^different-obj <obj>
        ^internal-att <att-to-comp>)
}

# If the attribute is internal, elaborate the group-object
sp {find-value-group*elaborate*differs-from-group*group-obj
   (state <s> ^name find-value-group
              ^att-type internal
              ^operator <o> +
              ^object <obj>)
   (<o> ^name differs-from-group
        ^query <q>)
-->
   (<q> ^group-obj <obj>)
}

# If the attribute is internal, add exceptions to the query structure
sp {find-value-group*elaborate*differs-from-group*exception
   (state <s> ^name find-value-group
              ^att-type internal
              ^operator <o> +
              ^common-av-pair <common-av-pair>
              ^att-to-comp <att-to-comp>)
   (<common-av-pair> ^known true
                     ^att-type internal
                     ^att {<att> <> <att-to-comp>}
                     ^val <val>)
   (<o> ^name differs-from-group
        ^object.mapping.att-val-pair <av-pair>
        ^query <q>)
   (<av-pair> ^att.internal <att>
              ^att.external <external-att>
              ^val.internal <> <val>)
-->
   (<q> ^exception <external-att>)
}

# If there is another unknown attribute (different from att-to-comp)
# That all the objects share a common value for and this compared-object differs on, 
# then Reject the operator, because the case is ambiguous
sp {find-value-group*reject*differs-from-group
   (state <s> ^name find-value-group
              ^operator <o> +
              ^common-av-pair <common-av-pair>
              ^att-to-comp <att-to-comp>
              ^att-type <att-type>)
   (<common-av-pair> ^known false
                     ^att-type <att-type>
                     ^att {<att> <> <att-to-comp>}
                     ^val <val>)
   (<o> ^name differs-from-group
        ^object.mapping.att-val-pair <av-pair>)
   (<av-pair> ^att.<att-type> <att>
              ^val.<att-type> <> <val>)
-->
   (<s> ^operator <o> -)
}

# For external attributes, this identifies the potential matches to internal ones
# Potential match if there is an internal att-val pair shared by the objects that
#  is also different on the object
sp {find-value-group*elaborate*differs-from-group*potential*match
   (state <s> ^name find-value-group
              ^att-type external
              ^operator <o> +
              ^common-av-pair <common-av-pair>)
   (<o> ^name differs-from-group
        ^object.mapping.att-val-pair <av-pair>)
   (<common-av-pair> ^known false
                     ^att-type internal
                     ^att <internal-att>
                     ^val <internal-val>)
   (<av-pair> ^att.internal <internal-att>
              ^val.internal <> <internal-val>)
-->
   (<o> ^potential-match <internal-att>)
}


# Mark compared
sp {find-value-group*apply*differs-from-group*mark-compared
   (state <s> ^name find-value-group
              ^operator <o>)
   (<o> ^name differs-from-group
        ^object <obj>)
-->
   (<s> ^compared <obj>)
}

# If there is only 1 potential match for the attribute, learn it
sp {find-value-group*apply*differs-from-group*external*learn-att
   (state <s> ^name find-value-group
              ^operator <o>
              ^att-type external
              ^att-to-comp <external-att>
              ^topstate.status <status> <top>)
   (<o> ^name differs-from-group
        ^potential-match <internal-att>
       -^potential-match <> <internal-att>)
-->
   (<status> ^type learning
             ^state-name topstate
             ^purpose <p>)
   (<p> ^type learn-att
        ^parameters <params>
        ^satisfaction <sat>)
   (<params> ^internal <internal-att>
             ^external <external-att>)
   (<sat> ^learning-event attribute)
}

   

# For internal attributes, put the query on the top state
sp {find-value-group*apply*differs-from-group*create-query
   (state <s> ^name find-value-group
              ^att-type internal
              ^operator <o>
              ^topstate.queries <qs>)
   (<o> ^name differs-from-group
        ^query <q>)
-->
   (<qs> ^query <q>)
}
   
