# Lookup word - try to find the word for the given label
sp {describe-object*propose*lookup-smem*word
   (state <s> ^name describe-object
              ^needs-found <nf>
              ^desc-object <obj>)
   (<nf> ^query {<label> <> name}
        -^result)
-->
   (<s> ^operator <o> + =)
   (<o> ^name lookup-smem
        ^lookup-type word
        ^category smem
        ^query <q>
        ^desired.word <dw>)
   (<q> ^type label-map ^word <w> ^category <c> ^label <label>)
}

sp {describe-object*apply*lookup-smem*word
   (state <s> ^name describe-object
              ^needs-found <nf>
              ^operator <o>)
   (<o> ^name lookup-smem
        ^lookup-type word
        ^query.label <label>
        ^result <result>)
   (<nf> ^query <label>)
-->
   (<nf> ^result <result>)
}

# Lookup name - special case where we try and find the object's name
sp {describe-object*propose*lookup-name
   (state <s> ^name describe-object
              ^needs-found <nf>
              ^desc-object <obj>)
   (<nf> ^query name
        -^result)
-->
   (<s> ^operator <o> + =)
   (<o> ^name lookup-name
        ^category object-processing)
}

sp {describe-object*apply*lookup-name*has-name
   (state <s> ^name describe-object
              ^operator.name lookup-name
              ^desc-object <obj>
              ^needs-found <nf>)
   (<obj> ^property <prop>)
   (<prop> ^name name
           ^word <name>)
   (<nf> ^query name)
-->
   (<nf> ^result <name>)
}

sp {describe-object*apply*lookup-name*no-name
   (state <s> ^name describe-object
              ^operator.name lookup-name
              ^object <obj>
              ^needs-found <nf>)
   (<obj> ^property <prop>)
   (<prop> ^name name
           -^word <name>)
   (<nf> ^query name)
-->
   (<nf> ^result object)
}