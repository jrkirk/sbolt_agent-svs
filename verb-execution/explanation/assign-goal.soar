## create the ^desired attribute in the composite operator state
## if the operator is associated with a long-term id corresponding to the goal, retrieve the children.
## if no children are retrieved, pose a 'goal-query'
## SM: will not work! The goal has to be grounded before this stage. Possibly comprehension.

### elaborate assign-goal
sp {assign-goal*elaborate*state
   (state <s> ^name assign-goal
   	      ^superstate.operator <sop>)
   (<sop> ^name assign-goal
   	  ^long-term-id <glid>
	  ^superoperator <iop>) 
-->
  (<s> ^long-term-id <glid>
       ^desired <d>
       ^superoperator <iop>)
}

### retrieve the long-term-id corresponding to the goal of the indexed-operator
sp {assign-goal*retrieve*long-term-id
   (state <s> ^name assign-goal
   	      ^long-term-id <glid>
	      ^smem.command <scom>)
-->
   (<scom> ^retrieve <glid>)
}

### if there is no predicate attribute on the goal id, no goal is known, begin an interaction
sp {assign-goal*unknown-goal
   (state <s> ^name assign-goal
   	      ^long-term-id <glid>
	      ^smem.result <sres>
	      ^topstate <ts>)
   (<sres> ^success <glid>) ## correctly retrieved
   (<glid> -^<predicate> <any>) ## no predicates in goal
   (<ts> ^status <stat>)
-->
   (<stat> ^type unknown-goal)
}

### elaborate desired
sp {assign-goal*elaborate*desired*state
   (state <s> ^name assign-goal
   	      ^desired <d>
	      ^long-term-id <glid>)
   (<glid> ^<prep> <p1>)
   (<p1> ^type <ltid>)
-->
   (<d> ^track-relation <rel>)
   (<rel> ^spatial-relationship <ltid>)
}

### connect desired to the objects in the indexed-operator
sp {assign-goal*elaborate*objects
   (state <s> ^name assign-goal
   	      ^desired.track-relation <tr>
	      ^long-term-id <glid>
	      ^superoperator <iop>)
   (<glid> ^<prep> <p1>)
   (<tr> ^spatial-relationship <type>)
   (<p1> ^{<parg> <> type} <sobj>
   	 ^type <type>)
   (<iop> ^_metadata.map-id.procedural.<varg> <sobj>
   	  ^<varg> <obj>)
-->
   (<tr> ^<parg> <obj>)
  
}


### add rule to use a semantic object
sp {assign-goal*elaborate*semantic-objects
   (state <s> ^name assign-goal
   	      ^desired.track-relation <tr>
	      ^long-term-id <glid>
	      ^superoperator <iop>)
   (<glid> ^<prep> <p1>)
   (<tr> ^spatial-relationship <type>)
   (<p1> ^{<parg> <> type} <sobj>
   	 ^type <type>)
   (<iop> -^_metadata.map-id.procedural.<varg> <sobj>
   	  ^name <opname>)
-->
   (<tr> ^<parg> <sobj>)
   (<sobj> ^focus (concat <opname> <parg>))
}

### if state-no-change, write desired to the superstate
sp {assign-goal*write*superstate*desired
   (state <s> ^impasse no-change
   	      ^attribute state
	      ^superstate <ss>)
   (<ss> ^name assign-goal
   	 ^superstate <sss>
	 ^desired <d>)
-->
   (<sss> ^desired <d>)
}


### create the desired attribute on the state
sp {assign-goal*propsoe*retrieve-predicate
   (state <s> ^name assign-goal
   	      ^long-term-id <glid>
	      ^smem.result <sres>)
   (<sres> ^success <glid>)
   (<glid> ^<prep> <p1>)
   (<p1> -^<parg> <pval>)
-->
   (<s> ^operator <op> + >)
   (<op> ^name retrieve-predicate
   	 ^predicate <p1>)
}


### retrieve the predicate
sp {retrieve-predicate*retrieve-predicate
   (state <s> ^name retrieve-predicate
   	      ^superstate.operator.predicate <p1>
	      ^smem.command <scomm>)
  -->
   (<scomm> ^retrieve <p1>)
}
	      
