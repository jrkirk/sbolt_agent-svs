### communicate with the instructor
### case 1: if the agent wants to initiate a conversation, and the purpose of the dialog is to elicit an action/fact out of human

sp {top-state*propose*communicate*case1
   (state <s> ^topstate <s>
   	      -^nl.input-link.message <message>
	      ^interaction.stack <cs>)
   (<cs> ^segment <seg>)
   (<seg> ^purpose <p>
   	  ^originator agent)
   (<p> ^type <ptype>
       -^parameters.message 
   	-^conveyed true
    -^satisfaction.learning-event)
-->
   (<s> ^operator <op> +)
   (<op> ^name communicate
   	 ^category communication
	 ^string <ptype>)}



### if a communicate operator is proposed for a purpose that has been marked conveyed true, retract the proposal

sp {top-state*retract*communicate
   (state <s> ^topstate <s>
   	      ^operator <op>
	      ^interaction.stack <cs>)
   (<cs> ^segment <seg>)
   (<seg> ^purpose.conveyed true)
   (<op> ^name communicate)
-->
   (<s> ^operator <op> -)
}
	      		
### mark a purpose conveyed true, if it has been succesfully communicated
sp {topstate*apply*communicate
   (state <s> ^operator <op> 
   	      ^interaction.stack <cs>)
   (<cs> ^segment.purpose <pur>)
   (<op> ^name communicate
   	 ^status success)
-->
   (<pur> ^conveyed true)
}

sp {communicate*elaborate*query*string
   (state <s> ^name communicate
   	      ^superstate.operator <sop>)
   (<sop> ^name communicate
   	  ^string <string>)
-->
   (<s> ^string <string>)
}

sp {communicate*propose*put-on-nl-oplink
   (state <s> ^name communicate
   	      ^string <string>
	      -^communicated <string>)
-->
   (<s> ^operator <op> +)
   (<op> ^name put-on-nl-oplink
   	 ^category communication
   	 ^information <string>)
}

sp {communicate*apply*put-on-nl-oplink
   (state <s> ^name communicate
   	      ^operator <op> 
	      ^nl.output-link <ol>
	      ^superstate.operator <sop>)
   (<op> ^name put-on-nl-oplink
   	 ^information <string>
    -^information.fields)
-->
   (<ol> ^message <message>)
   (<message> ^first.word <string>
   	      ^next nil)
   (<s> ^communicated <string>)
   (dont-learn <s>)
}


sp {communicate*set*status*success
   (state <s> ^name communicate
   	      ^io.output-link <ol>
	      ^superstate.operator <sop>)
   (<ol> ^send-message <message>)
-->
  (<sop> ^status success)
}

# The following productions mimic the above ones except that they deal
# with the case that a message structure has already been created and 
# simply needs to be copied to the output-link
# This is the case if there is a ^message WME on the purpose
sp {top-state*propose*communicate*message
   (state <s> ^topstate <s>
   	      -^nl.input-link.message <message>
	      ^interaction.stack <cs>)
   (<cs> ^segment <seg>)
   (<seg> ^purpose <p>
   	  ^originator agent)
   (<p> ^type <ptype>
       ^parameters.message <msg>
   	-^conveyed true)
-->
   (<s> ^operator <op> +)
   (<op> ^name communicate
   	 ^category communication
	 ^message <msg>)}


sp {communicate*elaborate*query*message
   (state <s> ^name communicate
   	      ^superstate.operator <sop>)
   (<sop> ^name communicate
   	  ^message <msg>)
-->
   (<s> ^message <msg>)
}

sp {communicate*propose*put-on-nl-oplink*message
   (state <s> ^name communicate
   	      ^message <msg>
	      -^communicated <msg>)
-->
   (<s> ^operator <op> +)
   (<op> ^name put-on-nl-oplink
   	 ^category communication
   	 ^information <msg>)
}


sp {communicate*apply*put-on-nl-oplink*message
   (state <s> ^name communicate
   	      		^operator <op> 
	      ^nl.output-link <ol>)
   (<op> ^name put-on-nl-oplink
         ^information <message>)
   (<message> ^fields <f>)
-->
   (<ol> ^message <message>)
   (<s> ^communicated <message>)
   (dont-learn <s>)
}

	
