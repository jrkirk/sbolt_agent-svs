
sp {location-question*propose*lookup-preposition
   (state <s> ^name location-question
              ^topstate.object
             -^found-prep.predicate.name <prep>
              ^topstate.prepositions.prep <prep>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name lookup-preposition
        ^category svs
        ^type <prep>)
}

sp {location-question*propose*find-relations
   (state <s> ^name location-question
               ^obj <id>
               ^found-prep <fprep>)
   (<fprep> ^predicate.name <prep>)
   -{(<s> ^relationships <rels>)
   (<rels> ^with <id> ^preposition <prep>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name find-relations
        ^category svs
        ^obj <id>
        ^found-prep <fprep>
        ^ind 1
        ^prep <prep>) 
}


sp {location-question*extract-distances
   (state <s> ^name location-question
               ^relationships <r>
               ^topstate.svs.command <cmd>
               ^topstate.svs.spatial-scene <sp>
               ^obj <id2>)
   (<r> ^relations.obj <id1> ^preposition <prep>)        
   (<sp> ^child <C> ^child <C2>)
   (<C> ^id <obj1> ^id-int <id1>)
   (<C2> ^id <obj2> ^id-int <id2>)
-->
   (<cmd> ^extract <P11>)
   (<P11> ^a <N7> ^b <N8> ^type distance)
   (<N7> ^type node ^id <obj1>)
   (<N8> ^type node ^id <obj2>)
}

sp {location-question*propose*found-closest
   (state <s> ^name location-question
               ^relationships <r>
               ^topstate.svs.command <cmd>
               ^topstate.svs.spatial-scene <sp>
               ^obj <id2>)
   (<r> ^relations.obj <id1> ^preposition <prep>)        
   (<sp> ^child <C> ^child <C2>)
   (<C> ^id <obj1> ^id-int <id1>)
   (<C2> ^id <obj2> ^id-int <id2>)
   (<cmd> ^extract <E11>)
   (<E11> ^type distance ^result.record <rec>)
   (<rec> ^value <dist> ^params <A1>)
   (<A1> ^a <obj1> 
         ^b <obj2>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name found-closest
        ^category svs
        ^prep <prep>
        ^dist <dist>
        ^object <id2>
        ^with <id2>
        ^descriptions <d>
        ^object <id1>)
}

sp {found-closest*propose*describe-object
   (state <s> ^name found-closest
               ^object <id>
              -^described <obj>
               ^topstate.object <obj>)
   (<obj> ^id <id>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name describe-object
        ^category svs
        ^object <obj>)
}
sp {found-closest*apply*describe-object
   (state <s> ^name found-closest
              ^descriptions <d>
              ^operator <o>)
   (<o> ^name describe-object
        ^object <obj>
        ^description <desc>)
-->
   (<s> ^described <obj>)
   (<d> ^obj-desc <objd>)
   (<objd> ^desc <desc> ^object <obj>)
}

sp {found-closest*propose*complete-location-question
   (state <s> ^name found-closest
              ^descriptions <d>)
   (<s> ^object <id1> ^with {<id2> <> <id1>} ^prep <prep>)
   (<d> ^obj-desc <objd1> ^obj-desc <objd2>)
   (<objd1> ^desc <desc1> ^object <obj1>)
   (<objd2> ^desc <desc2> ^object <obj2>)
   (<obj1> ^id <id1>)
   (<obj2> ^id <id2>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-location-question
        ^category svs
        ^obj1 <desc2>
        ^obj2 <desc1>
        ^prep <prep>)
}
#   (<out> ^send-message <msg>)
#   (<msg> ^type describe-scene
#          ^fields <f>)
#   (<f> ^object2 <desc1> ^object1 <desc2> ^prep <prep>)
#   (<status> ^performed.dialog-event.type explanation)
#   (<s> ^operator <o> + =)
#   (<o> ^name complete-describe-message
#        ^category svs)
#}

sp {found-closest*apply*complete-location-question
   (state <s> ^name found-closest
              ^topstate.io.output-link <out>
              ^topstate.status <status>
              ^operator <o>)
   (<o> ^name complete-location-question
        ^obj1 <desc1>
        ^obj2 <desc2>
        ^prep <prep>)
-->
   (<out> ^send-message <msg>)
   (<msg> ^type describe-scene
          ^fields <f>)
   (<f> ^object1 <desc1> ^object2 <desc2> ^prep <prep>)
   (<status> ^performed.dialog-event.type explanation)
}


sp {location-question*propose*end-location-question*no-preps
   (state <s> ^name location-question
             -^topstate.prepositions.prep)
-->
   (<s> ^operator <o> + =)
   (<o> ^name end-location-question
        ^category svs)
}

sp {location-question*propose*end-location-question*no-objs
   (state <s> ^name location-question
             -^topstate.object)
-->
   (<s> ^operator <o> + =)
   (<o> ^name end-location-question
        ^category svs)
}

sp {location-question*propose*end-location-question*no-matches
   (state <s> ^name location-question
              ^relationships <rels>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name end-location-question
        ^category svs)
}

sp {location-question*apply*end-location-question
   (state <s> ^name location-question
              ^topstate.io.output-link <out>
              ^topstate.status <status>
              ^operator <o>)
   (<o> ^name end-location-question)
-->
   (<out> ^send-message <msg>)
   (<msg> ^type location-unknown
          ^fields <f>)
   (<status> ^performed.dialog-event.type explanation)
}
#sp {svs-query*propose*complete-svs-query
#   (state <s> ^name svs-query
#              ^relationships <r>)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name complete-svs-query
#        ^category svs)
#}
#
#sp {svs-query*apply*complete-svs-query
#   (state <s> ^name svs-query
#              ^relationships <r>
#              ^descriptions <d>
#              ^io.output-link <out>
#              ^operator.name complete-svs-query
#              ^topstate.status <status>)
#-->
#   (<out> ^send-message <msg>)
#   (<msg> ^type list-objects
#          ^fields.objects <d>)
#   (<status> ^performed.action-event.type describe)
#}
#
#sp {svs-query*apply*complete-svs-query*preposition-unknown
#   (state <s> ^name svs-query
#              ^relationships.failure prep-not-found
#             -^described
#              ^operator.name complete-svs-query
#              ^io.output-link <out>)
#-->
#   (<out> ^send-message <msg>)
#   (<msg> ^type no-prep
#          ^fields.object failure)
#}
#
#
#
