#find ids for both objects then process in svs
sp {svs-project*propose*find-projection
   (state <s> ^name svs-project
              -^projection-result
               ^topstate.object <a>
              ^superstate.operator <so>)
   (<so> ^message.fields.objects <objs>)
   (<objs> ^obj <object>
           ^type <prep>)
   (<object> ^id <id> ^index <ind>)
   (<a> ^id <id>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name find-projection
        ^category svs
        ^interaction true
        ^a <a>
        ^b <a>
        ^type <prep>)
}


sp {svs-project*find-projections*failed
   (state <s> ^name svs-project
              ^projection-result failure
              ^topstate.status <status>)
-->
   #(<status> ^performed.action-event describe)
   # AM: Changed performed structure
   (<status> ^performed.action-event <e>)
   (<e> ^type describe)
}

sp {svs-project*find-projections*failed*prep-unknown
   (state <s> ^name svs-project
              ^projection-result failure
              ^proj-failure-reason no-prep
              ^io.output-link <out>)
-->
   (<out> ^send-message <msg>)
   (<msg> ^type no-prep
          ^fields.object failure)
}

sp {svs-project*propose*point
   (state <s> ^name svs-project
               ^projection-result <res>
               ^io.output-link <out>
               ^topstate.status <status>)
   (<res> ^x <x> ^y <y> ^z <z>)
-->
   (<out> ^point <point>)
   (<point> ^pose <pose>)
   (<pose> ^x <x> ^y <y> ^z <z>)
   #(<status> ^performed.action-event describe)
   # AM: Changed performed structure
   (<status> ^performed.action-event <e>)
   (<e> ^type describe)
}


   


