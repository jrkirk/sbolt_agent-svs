# Rules that handle when a single-word-response is sent by the user

sp {propose*push-single-word-response
   (state <s> ^topstate <s>
              ^instructor-message <msg>)
   (<msg> ^type single-word-response
         -^purpose)
-->
   (<s> ^operator <o> +)
   (<o> ^name push-single-word-response
        ^category communication
        ^message <msg>)
}

# Elaborate useful information from the message to the operator
sp {elaborate*push-single-word-response*response
   (state <s> ^operator <o> +)
   (<o> ^name push-single-word-response
        ^message <msg>)
   (<msg> ^information.response <response>)
-->
   (<o> ^response <response>)
}

# teaching-request - respond with finished or cancel
#sp {apply*push-single-word-response*teaching-request*remove*message
#   (state <s> ^operator <o>
#              ^instructor-message <msg>)
#   (<o> ^name push-single-word-response
#        ^response << finished cancel >>
#        ^message <msg>)
#   (<msg> ^context.cause teaching-request)
#-->
#   (<s> ^instructor-message <msg> -)
#}

sp {apply*push-single-word-response*teaching-request*cancel
   (state <s> ^operator <o>)
   (<o> ^name push-single-word-response
        ^response cancel
        ^message.context <context>)
   (<context> ^cause teaching-request
              ^object <obj>)
-->
   (<obj> ^no-teaching true)
}

#JK for prepositions
sp {apply*push-single-word-response*teaching-request*cancel*prep
   (state <s> ^operator <o>)
   (<o> ^name push-single-word-response
        ^response cancel
        ^message.context <context>)
   (<context> ^status <stat>)
-->
   (<stat> ^no-teaching true)
}

# AM: Saying clear will cause the stack to clear
sp {apply*push-single-word-response*clear*start-clear-stack
   (state <s> ^operator <o>
              ^topstate <top>)
   (<o> ^name push-single-word-response
        ^response clear
        ^message <msg>)
-->
   (<top> ^clear-interaction-stack true)
#   (<top> ^instructor-message <msg> -)
}

# AM: Saying status will cause the agent to describe the current interaction
sp {apply*push-single-word-response*status*start-clear-stack
   (state <s> ^operator <o>)
   (<o> ^name push-single-word-response
        ^response status
        ^message <msg>)
-->
   (<msg> ^purpose <p>)
   (<p> ^type report-interaction
        ^satisfaction.dialog-event.type report-interaction)
}

# Response to asking for confirmation on an indexing
sp {apply*push-single-word-response*request-index-confirmation*clear-arm
   (state <s> ^operator <o>
              ^io.output-link <out>)
   (<o> ^name push-single-word-response
        ^message.context.cause request-index-confirmation)
-->
   (<out> ^home <h>)
}

sp {apply*push-single-word-response*request-index-confirmation*index-confirmation
   (state <s> ^operator <o>
              ^io.output-link <out>)
   (<o> ^name push-single-word-response
        ^response <resp>
        ^message <msg>)
   (<msg> ^context <context>)
   (<context> ^cause request-index-confirmation
              ^object-id <id>
              ^index-object <i-obj>)
-->
   (<msg> ^purpose <p>)
   (<p> ^type index-confirmation
        ^parameters <params>
        ^satisfaction <sat>)
   (<sat> ^action-event.type home)
   (<params> ^object-id <id>
             ^object-desc <i-obj>
             ^response <resp>)
}


sp {apply*push-single-word-response*request-index-confirmation*yes
   (state <s> ^operator <o>
              ^io.output-link <out>)
   (<o> ^name push-single-word-response
        ^response yes
        ^message <msg>)
   (<msg> ^context <context>)
   (<context> ^cause request-index-confirmation
              ^object-id <id>
              ^index-object <i-obj>)
-->
   (<i-obj> ^match-id <id>)
}

sp {apply*push-single-word-response*request-index-confirmation*no
   (state <s> ^operator <o>
              ^io.output-link <out>)
   (<o> ^name push-single-word-response
        ^response no
        ^message <msg>)
   (<msg> ^context <context>)
   (<context> ^cause request-index-confirmation
              ^index-object-context <i-context>)
   (<i-context> ^infer-match true)
-->
   (<i-context> ^infer-match true -
                ^infer-match false)
}

# Response to an abiguous category
sp {apply*push-single-word-response*ambiguous-category
   (state <s> ^operator <o>
              ^instructor-message <msg>
              ^interaction.stack.segment.info <info>)
   (<o> ^name push-single-word-response
        ^response <cat>
        ^message.context <context>)
   (<context> ^cause ambiguous-category
              ^word <word>
              ^result <cat>)
-->
   (<info> ^nounjective <nj>)
   (<nj> ^word <word>
         ^category <cat>)
  # (<s> ^instructor-message <msg> -)
}

sp {apply*push-single-word-response*mark*processed
   (state <s> ^operator <o>)
   (<o> ^name push-single-word-response
        ^message <msg>)
-->
   (<msg> ^processed true)
}

sp {apply*push-single-word-response*remove*message
   (state <s> ^operator <o>)
   (<o> ^name push-single-word-response
        ^message <msg>)
   (<msg> ^processed true
         -^purpose)
-->
   (<s> ^instructor-message <msg> -)
}
