sp {game-start*propose*lookup-game
   (state <s> ^name game-start
             -^game
              ^superstate.operator.game-name <game>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name lookup-game
        ^category svs # for now determine better or new category
        ^game-name <game>)
}

sp {game-start*propose*store-game-context
   (state <s> ^name game-start
              ^game <game>
              ^superstate.operator.game-name <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name store-game-context
        ^category svs # for now determine better or new category
        ^game <game>)
}

sp {game-start*apply*store-game-context
   (state <s> ^name game-start
              ^operator <o>
              ^topstate <ts>)
   (<o> ^name store-game-context
        ^game <game>)
-->
   (<ts> ^current-game <cg>)
   (<cg> ^game <game>)
}


sp {game-start*send-message
   (state <s> ^name game-start
              ^topstate.io.output-link <out>
              ^topstate.status <status>
              ^topstate.current-game.game.game-name <game>
              ^superstate.operator.game-name <game>)
-->
   (<out> ^send-message <msg>)
   (<msg> ^type game-start
          ^fields <f>)
   (<status> ^performed.dialog-event.type game)
}

sp {game-initiate*send-message
   (state <s> ^name game-initiate
              ^topstate.io.output-link <out>
              ^topstate.status <status>)
-->
   (<out> ^send-message <msg>)
   (<msg> ^type play-game
          ^fields <f>)
   (<status> ^performed.dialog-event.type game)
}

